@model TreeViewModel

@helper RenderTree(IEnumerable<ITreeObject> objects, int level = 1)
{
  <div style="margin-left: @(level * 5)px;">
    @foreach (var obj in objects.OrderBy(x => x.Order).ThenBy(x => x.Name))
    {
      if (obj is NamespaceDirectory)
      {
        <i class="icon-folder-open"></i> @obj.Name
      }
      else if (obj is TreeDirectory)
      {
        <i class="icon-folder-close"></i> @Html.ActionLink(obj.Name, "Tree", "Repository", new { branch = Model.Branch, path = string.Concat(Model.RepositoryPath, "/", obj.Path) }, null)<br />
      }
      else if (obj is TreeFile)
      {
        <i class="icon-file"></i> @Html.ActionLink(obj.Name, "Blob", "Repository", new { branch = Model.Branch, path = string.Concat(Model.RepositoryPath, "/", obj.Path) }, null)<br />
      }
      else if (obj is RepositoryDirectory)
      {
        <i class="icon-code-fork"></i> 
          @Html.ActionLink(obj.Name, "Index", "Repository", new{path = obj.Path}, null)
        <br />
      }

      if (obj.Objects != null && obj.Objects.Any())
      {
        @RenderTree(obj.Objects, level + 1)
      }
    }
  </div>  
}

<div class="tree">
  @RenderTree(Model.Tree.Directories)
</div>