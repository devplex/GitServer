@model DirectoryTree
@helper RenderBranches(RepositoryDirectory repository)
{
  if (repository.Branches != null)
  {
    foreach (var branch in repository.Branches)
    {
      @Html.ActionLink(branch, "Log", "Repository", new { branch, path = repository.PathWithoutExtension }, null)
    }
  }
}

@helper RenderTree(IEnumerable<ITreeDirectory> directories, int level = 1)
{
  <div style="margin-left: @(level * 5)px;">
    @foreach (var directory in directories.OrderBy(x => x.GetType()).ThenBy(x => x.Name))
    {
      if (directory is NamespaceDirectory)
      {
      <i class="icon-folder-open"></i> @directory.Name
      }
      else if (directory is RepositoryDirectory)
      {
        var repository = directory as RepositoryDirectory;
        
      <i class="icon-code-fork"></i> @directory.Name @:(@Url.RepositoryCloneUrl(directory.Path)) @RenderBranches(repository)
      <br />
      }

      if (directory.Directories != null && directory.Directories.Any())
      {
      @RenderTree(directory.Directories, level + 1)
      }
    }
  </div>  
}

@RenderTree(Model.Directories)